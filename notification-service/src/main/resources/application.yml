server:
  port: ${SERVER_PORT:9994}  # or any other port your microservice runs on

spring:



    #datasource:
    #url: jdbc:mysql://localhost:3306/hotelMicroservice
    #username: root
    #password: nitinrai
    #driver-class-name: com.mysql.cj.jdbc.Driver

  kafka:
    consumer:
      bootstrap-servers:
        - localhost:9092
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.notificationService.dto.UserRegisterEvent
        spring.json.use.type.headers: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true



        #jpa:
   # hibernate:
    #  ddl-auto: update  # creates tables fresh on each restart (for dev)
    #show-sql: true
    #properties:
    #  hibernate:
        #dialect: org.hibernate.dialect.MySQL8Dialect

  #sql:
   # init:
    #  mode: always
     # schema-locations:
      #  - 'classpath:init.sql'
      #continue-on-error: true

#eureka:
  #instance:
   # prefer-ip-address: true
  #client:
   # fetch-registry: true
   # register-with-eureka: true
    #service-url:
     # defaultZone: http://localhost:9094/eureka


eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:9094/eureka


